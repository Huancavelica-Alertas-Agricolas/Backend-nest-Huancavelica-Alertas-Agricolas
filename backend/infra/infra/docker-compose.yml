version: '3.9'

services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - ../../.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - city_alerts_net

  redis:
    image: redis:7
    restart: always
    env_file:
      - ../../.env
    networks:
      - city_alerts_net

  users-service:
    build: ../../services/users-service
    restart: always
    env_file:
      - ../../.env
    depends_on:
      - db
      - redis
    networks:
      - city_alerts_net

  alerts-service:
    build: ../../services/alerts-service
    restart: always
    env_file:
      - ../../.env
    depends_on:
      - db
      - redis
    networks:
      - city_alerts_net

  notifier-service:
    build: ../../services/notifier-service
    restart: always
    env_file:
      - ../../.env
    command: celery -A notifier_service.celery_app worker --loglevel=info
    depends_on:
      - db
      - redis
    networks:
      - city_alerts_net

  scheduler:
    build: ../../services/notifier-service
    restart: always
    env_file:
      - ../../.env
    command: celery -A notifier_service.celery_app beat --loglevel=info
    depends_on:
      - db
      - redis
    networks:
      - city_alerts_net

  ingress-service:
    build: ../../services/ingress-service
    restart: always
    env_file:
      - ../../.env
    depends_on:
      - db
      - redis
    networks:
      - city_alerts_net

  reverse-proxy:
    image: caddy:2
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - city_alerts_net

volumes:
  db_data:

networks:
  city_alerts_net:
    driver: bridge
